
class Deck{
	private int numItems;							// reference to how many cards are in a deck
	private List D;									// list of cards in the deck
	
	// Deck constructor
	public Deck(){
		D = new List();								// create new list hold the deck of cards
		for (int i = 0; i < 52; i++){				// create a new card object and store it to the list
			String s = "";							// string to store the suit
			String r = "";							// string to store the rank
			int mod = i%13;							// int to hold the mod of i and 13
			// set the rank and suit of the card (Dirty but effective
			if (mod == 0){
				r = "ACE";
			}
			else if (mod == 1){
				r = "Two";
			}
			else if (mod == 2){
				r = "Three";
			}
			else if (mod == 3){
				r = "Four";
			}
			else if (mod == 4){
				r = "Five";
			}
			else if (mod == 5){
				r = "Six";
			}
			else if (mod == 6){
				r = "Seven";
			}
			else if (mod == 7){
				r = "Eight";
			}
			else if (mod == 8){
				r = "Nine";
			}
			else if (mod == 9){
				r = "Ten";
			}
			else if (mod == 10){
				r = "Jack";
			}
			else if (mod == 11){
				r = "Queen";
			}
			else{
				r = "King";
			}
			if (i >= 0 && i < 13){
				s = "Spade";
			}
			else if (i >= 13 && i < 26){
				s = "Heart";
			}
			else if (i >= 26 && i < 39){
				s = "Club";
			}
			else{
				s = "Diamond";
			}
			Card c = new Card(s, r);
			D.append(c);
		}
		numItems = D.length();
	}
	
	// shuffle the deck
	// @param takes no arguments
	// @return returns nothing
	public void shuffle(){
		
	}
	
	// deals out a set number of cards from the deck
	// @param takes an int to determine how many cards are dealt from the deck
	// @return returns a list of the cards handed out from the deck
	public List deal(int handSize){
		List hand = new List();
		if (handSize <= numItems){
			for (int i = 0; i <= handSize; i++){
				hand.append(D.front());
				D.deleteFront();
			}
		}
		return hand;
	}
	
	public String toString(){
		return D.toString();
	}
	
	private class Card{
		private String suit;
		private String rank;
		
		public Card(String s, String r){
			suit = s;
			rank = r;
		}
		
		private String getSuit(){
			return suit;
		}
		
		private String getRank(){
			return rank;
		}
		
		private void setSuit(String newSuit){
			suit = newSuit;
		}
		
		private void setRank(String newRank){
			rank = newRank;
		}
		
		public boolean equals(Object x){
			boolean equal = false;
			if (x instanceof Card){
				Card N = (Card)x;
				if (rank.equals(N.rank) && suit.equals(N.suit)){
					equal = true;
				}
			}
			return equal;
		}
		
		public String toString(){
			String str = rank+" of "+suit;
			return str;
		}
	}
}